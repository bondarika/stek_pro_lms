// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model Token {
  id           Int    @id @default(autoincrement())
  userId       Int    @unique
  user         User   @relation(fields: [userId], references: [id])
  refreshToken String @unique
}
model User {
  id             Int         @id @default(autoincrement())
  name           String
  surname        String
  email          String      @unique
  password       String
  codeId         Int
  isActivated    Boolean     @default(false)
  activationLink String?     @unique
  codes          UserCodes[]
  token          Token?
}

model Code {
  id         Int          @id @default(autoincrement())
  code       String       @unique
  type       String
  usageLimit Int?
  usedCount  Int          @default(0)
  users      UserCodes[]
  codes      Course[]     @relation("CourseCodes")
  CourseCode CourseCode[]
}

model Course {
  id         Int          @id @default(autoincrement())
  name       String
  codes      Code[]       @relation("CourseCodes")
  CourseCode CourseCode[]
}

model CourseCode {
  courseId Int
  codeId   Int

  course Course @relation(fields: [courseId], references: [id])
  code   Code   @relation(fields: [codeId], references: [id])

  @@id([courseId, codeId])
}

model UserCodes {
  userId Int
  codeId Int
  user   User @relation(fields: [userId], references: [id])
  code   Code @relation(fields: [codeId], references: [id])

  @@id([userId, codeId])
}
